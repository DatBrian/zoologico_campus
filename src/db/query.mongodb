use("db_zoologico");
db.createCollection("animales", {
    capped: true,
    size: 14000,
    max: 10,
    validator: {
        $jsonSchema: {
            bsonType: "object",
            additionalProperties: false,
            required: ["nombre", "especie", "clase", "sub_clase","pais_origen", "estado", "dato_curioso", "zona", "area"],
            properties: {
                _id: {
                    bsonType: 'objectId',
                },
                nombre: {
                    bsonType: "string",
                    pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]*$",
                    description: "Debe informar el campo name y este debe ser un string"
                },
                especie: {
                    bsonType: "string",
                    pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]*$",
                    description: "Debe informar el campo species y este debe ser un string"
                },
                clase: {
                    bsonType: "string",
                    pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]*$",
                    description: "Debe informar el campo class y este debe ser un string"
                },
                sub_clase: {
                    bsonType: "string",
                    pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]*$",
                    description: "Debe informar el campo sub_class y este debe ser un string"
                },
                pais_origen: {
                    bsonType: "string",
                    pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]*$",
                    description: "Debe informar el campo origin y este debe ser un string"
                },
                estado: {
                    bsonType: "string",
                    pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]*$",
                    description: "Debe informar el campo state y este debe ser un string"
                },
                dato_curioso: {
                    bsonType: "string",
                    pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]*$",
                    description: "Debe informar el campo curiosity y este debe ser un string"
                },
                zona: {
                    bsonType: "string",
                    pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]*$",
                    description: "Debe informar el campo zone y este debe ser un string"
                },
                area: {
                    bsonType: "string",
                    pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]*$",
                    description: "Debe informar el campo belonging_area y este debe ser un string"
                },
            }
        }
    }
});
use("db_zoologico");
db.createCollection("empleados", {
    capped: true,
    size: 10000,
    max: 10,
    validator: {
        $jsonSchema: {
            bsonType: "object",
            additionalProperties: false,
            required: ["nombre_completo", "cargo", "direccion", "email","telefono", "area_asignada", "zona",  "jornada"],
            properties: {
                _id: {
                    bsonType: 'objectId',
                },
                nombre_completo: {
                    bsonType: "string",
                    pattern: "^[a-zA-ZáéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]*$",
                    description: "Debe informar el campo complete_name y este debe ser un string"
                },
                cargo: {
                    bsonType: "string",
                    pattern: "^[a-zA-ZáéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]*$",
                    description: "Debe informar el campo assigned_position y este debe ser un string"
                },
                direccion: {
                    bsonType: "string",
                    pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]*$",
                    description: "Debe informar el campo address y este debe ser un string"
                },
                email: {
                    bsonType: "string",
                    pattern: "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
                    description: "Debe informar un campo Email válido"
                },
                telefono: {
                    bsonType: "string",
                    pattern: "^[0-9-]*$",
                    description: "Debe informar el campo phone_number y este debe ser un string numérico"
                },
                area_asignada: {
                    bsonType: "string",
                    pattern: "^[a-zA-ZáéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]*$",
                    description: "Debe informar el campo belonging_area y este debe ser un string"
                },
                zona: {
                    bsonType: "string",
                    pattern: "^[a-zA-ZáéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]*$",
                    description: "Debe informar el campo zone y este debe ser un string"
                },
                jornada: {
                    bsonType: "string",
                    pattern: "^[a-zA-ZáéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]*$",
                    description: "Debe informar el campo schedule y este debe ser un string"
                }
            }
        }
    }
});
use("db_zoologico");
db.createCollection("eventos", {
    capped: true,
    size: 10000,
    max: 10,
    validator: {
        $jsonSchema: {
            bsonType: "object",
            additionalProperties: false,
            required: ["fecha", "estado", "area", "descripcion","hora_inicio","hora_finalizacion"],
            properties: {
                _id: {
                    bsonType: 'objectId',
                },
                fecha: {
                    bsonType: "date",
                    pattern:"^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12]\\d|3[01])$",
                    description: "Debe informar el campo date y este debe ser un string"
                },
                estado: {
                    bsonType: "string",
                    pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]*$",
                    description: "Debe informar el campo state y este debe ser un string"
                },
                area: {
                    bsonType: "string",
                    pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]*$",
                    description: "Debe informar el campo belonging_area y este debe ser un string"
                },
                descripcion: {
                    bsonType: "string",
                    pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]*$",
                    description: "Debe informar el campo description_info y este debe ser un string"
                },
                hora_inicio: {
                    bsonType: "string",
                    pattern: "^(0?[1-9]|1[0-2]):[0-5]\\d\\s?(am|pm|AM|PM)$",
                    description: "Debe informar el campo start_time y este debe ser un string"
                },
                hora_finalizacion: {
                    bsonType: "string",
                    pattern: "^(0?[1-9]|1[0-2]):[0-5]\\d\\s?(am|pm|AM|PM)$",
                    description: "Debe informar el campo end_time y este debe ser un string"
                }
            }
        }
    }
});
use("db_zoologico");
db.createCollection("pase", {
    capped: true,
    size: 10000,
    max: 10,
    validator: {
        $jsonSchema: {
            bsonType: "object",
            additionalProperties: false,
            required: ["nombre", "tipo", "descripcion", "zonas","precios","horario", "dias"],
            properties: {
                _id: {
                    bsonType: 'objectId',
                },
                nombre: {
                    bsonType: "string",
                    pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]*$",
                    description: "Debe informar el campo name y este debe ser un string"
                },
                tipo: {
                    bsonType: "string",
                    pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]*$",
                    description: "Debe informar el campo type y este debe ser un string"
                },
                descripcion: {
                    bsonType: "string",
                    pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]*$",
                    description: "Debe informar el campo description y este debe ser un string"
                },
                zonas: {
                    bsonType: "string",
                    pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]*$",
                    description: "Debe informar el campo zone y este debe ser un string"
                },
                precios: {
                    bsonType: "number",
                    minimum: 0,
                    maximum: 9999999,
                    pattern: "^[0-9,.#@\\s-]+$",
                    description: "El campo prices debe ser un número y estar comprendido entre 0 y 9999999"
                },
                horario: {
                    bsonType: "string",
                    pattern: "^.*$",
                    description: "Debe informar el campo schedule y este debe ser un string"
                },
                dias: {
                    bsonType: "string",
                    pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]*$",
                    description: "Debe informar el campo days_opening y este debe ser un string"
                }
            }
        }
    }
});
use("db_zoologico");
db.createCollection("servicios", {
    capped: true,
    size: 10000,
    max: 10,
    validator: {
        $jsonSchema: {
            bsonType: "object",
            additionalProperties: false,
            required: ["producto", "descripcion", "precio","area", "zona", "horario_apertura", "horario_cierre"],
            properties: {
                _id: {
                    bsonType: 'objectId',
                },
                producto: {
                    bsonType: "string",
                    pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]*$",
                    description: "Debe informar el campo product y este debe ser un string"
                },
                descripcion: {
                    bsonType: "string",
                    pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]*$",
                    description: "Debe informar el campo description y este debe ser un string"
                },
                precio: {
                    bsonType: "int",
                    minimum: 0,
                    maximum: 9999999,
                    pattern: "^[0-9,.#@\\s-]+$",
                    description: "El campo price debe ser un número y estar comprendido entre 0 y 9999999"
                },
                area: {
                    bsonType: "string",
                    pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]*$",
                    description: "Debe informar el campo belonging_area y este debe ser un string"
                },
                zona: {
                    bsonType: "string",
                    pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]*$",
                    description: "Debe informar el campo zone y este debe ser un string"
                },
                horario_apertura: {
                    bsonType: "string",
                    pattern: "^(0?[1-9]|1[0-2]):[0-5]\\d\\s?(am|pm|AM|PM)$",
                    description: "Debe informar el campo opening_hours y este debe ser un string"
                },
                horario_cierre: {
                    bsonType: "string",
                    pattern: "^(0?[1-9]|1[0-2]):[0-5]\\d\\s?(am|pm|AM|PM)$",
                    description: "Debe informar el campo closing_time y este debe ser un string"
                }
            }
        }
    }
});
use("db_zoologico");
db.createCollection("jornadas", {
    capped: true,
    size: 10000,
    max: 10,
    validator: {
        $jsonSchema: {
            bsonType: "object",
            additionalProperties: false,
            required: ["nombre_jornada", "horario_entrada", "horario_salida"],
            properties: {
                _id: {
                    bsonType: 'objectId',
                },
                nombre_jornada: {
                    bsonType: "string",
                    pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]+$",
                    description: "Debe informar el campo schedule y este debe ser un string"
                },
                horario_entrada: {
                    bsonType: "string",
                    pattern: "^(0?[1-9]|1[0-2]):[0-5]\\d\\s?(am|pm|AM|PM)$",
                    description: "Debe informar el campo entry_time y este debe ser un string"
                },
                horario_salida: {
                    bsonType: "string",
                    pattern: "^(0?[1-9]|1[0-2]):[0-5]\\d\\s?(am|pm|AM|PM)$",
                    description: "El campo departure_time debe ser un número y estar comprendido entre 0 y 9999"
                }
            }
        }
    }
});
use("db_zoologico");
db.createCollection("restauranteCafeterias", {
    capped: true,
    size: 10000,
    max: 10,
    validator: {
        $jsonSchema: {
            bsonType: "object",
            additionalProperties: false,
            required: ["producto", "descripcion", "cantidad", "precio","lugar", "jornada"],
            properties: {
                _id: {
                    bsonType: 'objectId',
                },
                producto: {
                    bsonType: "string",
                    pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]*$",
                    description: "Debe informar el campo product y este debe ser un string"
                },
                descripcion: {
                    bsonType: "string",
                    pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]*$",
                    description: "Debe informar el campo description y este debe ser un string"
                },
                cantidad: {
                    bsonType: "int",
                    minimum: 0,
                    maximum: 9999,
                    pattern: "^[0-9,.#@\\s-]+$",
                    description: "El campo amount debe ser un número y estar comprendido entre 0 y 9999"
                },
                precio: {
                    bsonType: "int",
                    minimum: 0,
                    maximum: 9999999,
                    pattern: "^[0-9,.#@\\s-]+$",
                    description: "El campo price debe ser un número y estar comprendido entre 0 y 9999999"

                },
                lugar: {
                    bsonType: "string",
                    pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]*$",
                    description: "Debe informar el campo place y este debe ser un string"
                },
                jornada: {
                    bsonType: "string",
                    pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]*$",
                    description: "Debe informar el campo schedule y este debe ser un string"
                }
            }
        }
    }
});